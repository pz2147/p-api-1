syntax = "v1"

info(
	title: "API"
	desc: "API"
	author: "Paul"
	email: "paul@miaoshitech.com"
	version: "V1.0.0"
)

type PingPeq {}

type PingRes {
	Code int64 `json:"code"`
}

// LoginReq 登录接口
type LoginReq {
	Phone    string `json:"phone"`
	Password string `json:"password"`
}

// LoginResp 登录解析
type LoginResp {
	Uid          string `json:"uid"`
	Nickname     string `json:"nickname"`
	Pic          string `json:"pic"`
	AccessToken  string `json:"access_token"`
	AccessExpire int64  `json:"access_expire"`
	RefreshAfter int64  `json:"refresh_after"` // 建议客户端刷新token的绝对时间
}

// UidReq 用户uid的请求
type LogoutReq {
	Uid string `json:"uid"`
}

// LogoutResp 登出解析
type LogoutResp {
	IsSuc bool `json:"is_suc"`
}

// UidReq 用户uid的请求
type UserInfoReq {
	Uid string `path:"uid"`
}

// UserinfoResp 用户信息返回
type UserinfoResp {
	Uid      string `json:"uid"`
	Nickname string `json:"nickname"`
	Pic      string `json:"pic"`
}

@server(
	group: user
	middleware: Gateway
)
service PApi1 {
	@doc "user登录"
	@handler userLogin
	post /user/login (LoginReq) returns (LoginResp)
	
	@doc "user登出"
	@handler userLogout
	post /user/logout (LogoutReq) returns (LogoutResp)
	
	@doc "user信息"
	@handler userInfo
	get /user/:uid (UserInfoReq) returns (UserinfoResp)
}